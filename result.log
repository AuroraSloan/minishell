
input >> ls

====result of lexar====
[ls]

====result of parser====
0 1 >> [ls]

input >> lst

====result of lexar====
[lst]

====result of parser====
0 1 >> [lst]

input >> ls; ls; ls;

====result of lexar====
[ls]
[;]
[ls]
[;]
[ls]
[;]

====result of parser====
	0 1 >> [ls]
13 0 >> 
		0 1 >> [ls]
	13 0 >> 
			0 1 >> [ls]
		13 0 >> 

input >> cta result.log 

====result of lexar====
[cta]
[result.log]

====result of parser====
0 2 >> [cta][result.log]

input >> cat result.log 

====result of lexar====
[cat]
[result.log]

====result of parser====
0 2 >> [cat][result.log]

input >> ls

====result of lexar====
[ls]

====result of parser====
0 1 >> [ls]

input >> echo hey

====result of lexar====
[echo]
[hey]

====result of parser====
0 2 >> [echo][hey]
